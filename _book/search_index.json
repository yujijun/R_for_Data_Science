[["downstream-analysis.html", "第 59 章 组学数据下游分析", " 第 59 章 组学数据下游分析 本章我们主要接受下游分析中常用的工具和方法： 组学数据差异表达分析比较适用的详细教程有： 差异表达基因的展示： 2.1 计算出差异表达基因后，常用火山图进行展示： library(ggplot2) library(ggrepel) data$adj.P.Val &lt;- data$P.Value data_subset$adj.P.Val &lt;- data_subset$P.Value data_subset &lt;- data[data$`Gene name` %in% unique(merge_orig_ref_filter$`Gene name`),] data_subset &lt;- data_subset %&gt;% subset(-log10(adj.P.Val) &gt; -log10(0.01) &amp; abs(logFC) &gt; 1) rownames(data_subset) &lt;- data_subset$`Gene name` data_subset_list &lt;- list() for (i in 1:6){ gene_i &lt;- rownames(merge_na_heatmap[which(merge_na_heatmap$Category == levels(merge_na_heatmap$Category)[i]),]) data_subset_list[[i]] &lt;- data_subset[which(data_subset$`Gene name` %in% gene_i),] print(dim(data_subset_list[[i]])) } subset_color &lt;- c(&quot;#f8ecac&quot;,&quot;#edc7dd&quot;,&quot;#f8cbaa&quot;, &quot;#cad3e5&quot;,&quot;#e2eec6&quot;,&quot;#afdac7&quot;) ggplot(data=data, aes(x=logFC, y =-log10(adj.P.Val),color=significant)) + geom_point(alpha=0.8, size=0.2,col=&quot;black&quot;)+ geom_point(data=subset(data, logFC &gt; 1 &amp; adj.P.Val &lt; 0.05),alpha=0.8, size=0.2,col=&quot;red&quot;)+ geom_point(data=subset(data, logFC &lt; -1&amp;adj.P.Val &lt; 0.05),alpha=0.8, size=0.2,col=&quot;blue&quot;)+ labs(x=&quot;log2 (fold change)&quot;)+ theme(plot.title = element_text(hjust = 0.4))+ geom_hline(yintercept = -log10(0.05),lty=4,lwd=0.6,alpha=0.5)+ geom_vline(xintercept = c(1,-1),lty=4,lwd=0.6,alpha=0.5)+ theme_bw()+ theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;black&quot;)) + ylab(&quot;-log10(p.val)&quot;) + #labs(title = &quot;Volcano PLot of genes from matrisomeDB&quot;) + #theme(plot.title = element_text(hjust=0.5,face = &quot;bold&quot;,vjust = 1,size = 20)) + theme(axis.title = element_text(face = &quot;bold&quot;)) + theme(text = element_text(face = &quot;bold&quot;)) + # geom_point(data=subset(data, abs(logFC) &gt;= 6 &amp; adj.P.Val &lt; 0.05),alpha=0.8, size=3,col=&quot;green&quot;)+ # geom_text_repel(data=subset(data, abs(logFC) &gt; 6 &amp; adj.P.Val &lt; 0.05), # aes(label=gene),col=&quot;black&quot;,alpha = 0.8) geom_point(data=data_subset_list[[1]],alpha=0.85, size=1.5,col=subset_color[1])+ geom_point(data=data_subset_list[[2]],alpha=0.85, size=1.5,col=subset_color[2])+ geom_point(data=data_subset_list[[3]],alpha=0.85, size=1.5,col=subset_color[3])+ geom_point(data=data_subset_list[[4]],alpha=0.85, size=1.5,col=subset_color[4])+ geom_point(data=data_subset_list[[5]],alpha=0.85, size=1.5,col=subset_color[5])+ geom_point(data=data_subset_list[[6]],alpha=0.85, size=1.5,col=subset_color[6])+ geom_text_repel(data=data_subset,aes(label=gene),col=&quot;black&quot;,alpha = 0.8,size=3) #coord_fixed(ratio = 2) #library(export) ## 导成PPT可编辑的格式 graph2pdf(file=&quot;04_Output_figure/Version3/09_VolcanoPlot.pdf&quot;,aspectr=2, font = &quot;Arial&quot;, width = 10, height = 8, bg = &quot;transparent&quot;) 2.2 也常用heatmap进行展示： 可以参考多种热图的绘制方法：heatmap 2.3 热图绘制中，另一个比较大的方向就是热图的绘制，下面是我之前整理的一些code,如何从R获得想要的配色 #colors for clusters #(1)useage about ggsci:https://blog.csdn.net/m0_45248682/article/details/104077631 #根据说明书我们可以简单的将它们分成三类：pal,rgb,scale，前两个可以生成不同的颜色组，scale可以直接用与ggplot中 #ggplot+ scale_fill_aaas() #(2) ggpubr:https://www.jianshu.com/p/c0ebba8d1853 #分布图、箱式图、条形图、小提琴图、点图 #(3) RColorBrewer library(RColorBrewer) #display.brewer.all() #display.brewer.pal(10,&quot;Set3&quot;) #brewer.pal(7,&quot;BrBG&quot;) #show the colors #(4)specific figure colors for heatmap col_heatmap1 &lt;- colorRampPalette(rev(c(&quot;Yellow&quot;, &quot;black&quot;,&quot;#FF00FF&quot;)))(10) col_heatmap2 &lt;- colorRampPalette(rev(c(&quot;#67001F&quot;, &quot;#B2182B&quot;, &quot;#D6604D&quot;, &quot;#F4A582&quot;, &quot;#FDDBC7&quot;, &quot;#FFFFFF&quot;, &quot;#D1E5F0&quot;, &quot;#92C5DE&quot;, &quot;#4393C3&quot;, &quot;#2166AC&quot;, &quot;#053061&quot;)))(20) #(5) color for Tcell cluster_col &lt;- c(&quot;#E64B35FF&quot;,&quot;#4DBBD5FF&quot;,&quot;#E7298A&quot;,&quot;#3C5488FF&quot;,&quot;#7E6148FF&quot;, &quot;#BA55D3&quot;,&quot;#00A087FF&quot;,&quot;#FFA500&quot;,&quot;#B3DE69&quot;,&quot;#BEBADA&quot;,&quot;#000000&quot;,&quot;Yellow&quot;,brewer.pal(10,&quot;Set3&quot;)) cluster_col_v1 &lt;- c(&quot;#E64B35FF&quot;,&quot;#4DBBD5FF&quot;,&quot;#E7298A&quot;,&quot;#3C5488FF&quot;,&quot;#7E6148FF&quot;,&quot;#00A087FF&quot;,&quot;#FFA500&quot;,&quot;#000000&quot;,&quot;Yellow&quot;,RColorBrewer::brewer.pal(8,&quot;Dark2&quot;), RColorBrewer::brewer.pal(8,&quot;Pastel1&quot;)) #(6) color for PBMC my36colors &lt;-c(&#39;#E5D2DD&#39;, &#39;#53A85F&#39;, &#39;#F1BB72&#39;, &#39;#F3B1A0&#39;, &#39;#D6E7A3&#39;, &#39;#57C3F3&#39;, &#39;#476D87&#39;, &#39;#E95C59&#39;, &#39;#E59CC4&#39;, &#39;#AB3282&#39;, &#39;#23452F&#39;, &#39;#BD956A&#39;, &#39;#8C549C&#39;, &#39;#585658&#39;, &#39;#9FA3A8&#39;, &#39;#E0D4CA&#39;, &#39;#5F3D69&#39;, &#39;#C5DEBA&#39;, &#39;#58A4C3&#39;, &#39;#E4C755&#39;, &#39;#F7F398&#39;, &#39;#AA9A59&#39;, &#39;#E63863&#39;, &#39;#E39A35&#39;, &#39;#C1E6F3&#39;, &#39;#6778AE&#39;, &#39;#91D0BE&#39;, &#39;#B53E2B&#39;, &#39;#712820&#39;, &#39;#DCC1DD&#39;, &#39;#CCE0F5&#39;, &#39;#CCC9E6&#39;, &#39;#625D9E&#39;, &#39;#68A180&#39;, &#39;#3A6963&#39;, &#39;#968175&#39; ) col_cluster&lt;-c(&quot;#0073C2B2&quot;,&quot;#7876B1B2&quot;, &quot;#EFC000B2&quot;,&quot;#3B3B3BB2&quot;, &quot;#F39B7FB2&quot;,&quot;#4DBBD5B2&quot;,&quot;#EE4C97B2&quot;,&quot;#E64B35B2&quot;, #cd4 &quot;#8F7700B2&quot;,&quot;#FFDC91B2&quot;,&quot;#E18727B2&quot;, &quot;#6F99ADB2&quot;, # cd8 &quot;#868686B2&quot;, &quot;#7AA6DCB2&quot;,&quot;#3C5488B2&quot;,#NK &quot;#91D1C2B2&quot;,&#39;#00A087B2&#39;,&quot;#20854EB2&quot;,#B cell &quot;#8491B4B2&quot;,&quot;#BC3C29B2&quot;) #(7) colors for hc and bc colHC&lt;- rgb(60, 84, 136, 130, maxColorValue=255) colBD&lt;- rgb(243, 155, 127, 160, maxColorValue=255) #(8) cluster for monocyte: cellcol_mono =c(&quot;#4f6980&quot;,&quot;#849db1&quot;,&quot;#91b3d7&quot;, &quot;#a2ceaa&quot;,&quot;#bfbb60&quot;, &quot;#86BCB6&quot;,&quot;#FF9D9A&quot;,&#39;#ea8783&#39;,&quot;#fbb04e&quot;) cellcol_mono_new = c(&quot;#4f6980&quot;,&quot;#849db1&quot;,&quot;#BEBADA&quot;, &quot;#a2ceaa&quot;,&quot;#bfbb60&quot;, &quot;#86BCB6&quot;,&quot;#FF9D9A&quot;,&#39;#f47942&#39;,&quot;#fbb04e&quot;) # show_col(c(&quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;cyan&quot;, # &quot;green&quot;, &quot;yellow&quot;, # &quot;orange&quot;, &quot;brown&quot;, &quot;grey&quot;)) 计算完差异表达之后，下一步一般是进行富集分析,可以参考富集分析的链接进行分析和展示。 "]]
